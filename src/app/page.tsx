"use client"

import "./style.css";
import React, { useEffect, useState } from "react";

export default function Home() {
    const numIcons = 100;
    const [isAddTestFormVisible, setIsFormVisible] = useState(true);

    useEffect(() => {
      const snowContainer = document.querySelector(
        ".snow-container"
      ) as HTMLElement;

      const createSnowflakes = (num: number) => {
        for (let i = 0; i < num; i++) {
          const snowflake = document.createElement("div");
          snowflake.classList.add("snowflake");

          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Ä–∞–∑–º–µ—Ä
          const size = Math.random() * 20 + 10; // —Ä–∞–∑–º–µ—Ä –æ—Ç 10px –¥–æ 30px
          snowflake.style.fontSize = `${size}px`;

          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –ø–æ–∑–∏—Ü–∏—é
          const leftPosition = Math.random() * 100; // —Å–ª—É—á–∞–π–Ω–∞—è –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è
          snowflake.style.left = `${leftPosition}vw`;

          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏
          const speed = Math.random() * 10 + 5; // —Å–∫–æ—Ä–æ—Å—Ç—å –æ—Ç 5s –¥–æ 15s
          snowflake.style.animationDuration = `${speed}s`;

          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ
          const horizontalMovement = (Math.random() - 0.5) * 50; // —Å–ª—É—á–∞–π–Ω–æ–µ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ
          snowflake.style.transform = `translateX(${horizontalMovement}px)`;

          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∏–º–≤–æ–ª —Å–Ω–µ–∂–∏–Ω–∫–∏
          snowflake.innerHTML = "&#10052;";

          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Ü–≤–µ—Ç –¥–ª—è —Å–Ω–µ–∂–∏–Ω–∫–∏
          snowflake.style.color = `hsl(${Math.random() * 360}, 100%, 100%)`; // —Å–ª—É—á–∞–π–Ω—ã–π —Ü–≤–µ—Ç –≤ HSL

          snowContainer.appendChild(snowflake);

          // –£–¥–∞–ª—è–µ–º —Å–Ω–µ–∂–∏–Ω–∫–∏ –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
          snowflake.addEventListener("animationend", () => {
            snowflake.remove();
          });
        }
      };

      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–Ω–µ–≥–∞
      const amountSnow = 20; // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–Ω–µ–≥–∞

      // –°–æ–∑–¥–∞–µ–º —Å–Ω–µ–≥
      createSnowflakes(amountSnow);

      // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Å–Ω–µ–≥ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
      const intervalId = setInterval(() => {
        createSnowflakes(1); // –°–æ–∑–¥–∞–µ–º –æ–¥–Ω—É —Å–Ω–µ–∂–∏–Ω–∫—É
      }, 2000);

      // –û—á–∏—â–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
      return () => clearInterval(intervalId);
    }, []);

    const getRandomPositionInInvertedTriangle = (
      triangleWidth: number,
      triangleHeight: number
    ) => {
      const centerX = triangleWidth / 2; // –¶–µ–Ω—Ç—Ä –ø–æ –æ—Å–∏ X

      // –°–ª—É—á–∞–π–Ω–∞—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ X –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞
      const x = Math.random() * triangleWidth;

      // –ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç–∞—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ Y –¥–ª—è —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ –Ω–∞ 180 –≥—Ä–∞–¥—É—Å–æ–≤
      const y =
        triangleHeight -
        Math.random() *
          (triangleHeight - (triangleHeight * Math.abs(x - centerX)) / centerX);

      return { x, y };
    };

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π —à–∏—Ä–∏–Ω—ã –∏ –≤—ã—Å–æ—Ç—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è
    const getTriangleDimensions = (level: number) => {
      switch (level) {
        case 4:
          return { width: 400, height: 390 }; // –£—Ä–æ–≤–µ–Ω—å 4
        case 3:
          return { width: 330, height: 240 }; // –£—Ä–æ–≤–µ–Ω—å 3
        case 2:
          return { width: 250, height: 160 }; // –£—Ä–æ–≤–µ–Ω—å 2
        case 1:
          return { width: 200, height: 80 }; // –£—Ä–æ–≤–µ–Ω—å 1
        default:
          return { width: 190, height: 80 }; // –ó–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      }
    };

    const icons = ["üéÑ", "‚ùÑÔ∏è", "üéÖ", "üéÅ", "‚õÑ"]; // –ò–∫–æ–Ω–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞
    const iconCount: { [key: string]: number } = {}; // –û–±—ä–µ–∫—Ç –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –∏–∫–æ–Ω–æ–∫

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—á–µ—Ç—á–∏–∫–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–π –∏–∫–æ–Ω–∫–∏
    icons.forEach((icon) => {
      iconCount[icon] = 0;
    });

    // –†–∞–Ω–¥–æ–º–Ω–æ–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ –∏–∫–æ–Ω–æ–∫ –Ω–∞ –µ–ª–∫–µ
    useEffect(() => {
      for (let i = 0; i < numIcons; i++) {
        const randomIcon = icons[Math.floor(Math.random() * icons.length)];
        iconCount[randomIcon]++; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∏–∫–æ–Ω–∫–∏

        const level = Math.floor(Math.random() * 4) + 1; // –†–∞–Ω–¥–æ–º–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å
        const iconElement = document.createElement("div");
        iconElement.classList.add(`tree-icon-level-${level}`);
        iconElement.textContent = randomIcon;

        // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è
        const { width, height } = getTriangleDimensions(level);
        const position = getRandomPositionInInvertedTriangle(width, height);

        iconElement.style.position = "absolute";
        iconElement.style.left = `${position.x}px`;
        iconElement.style.top = `${position.y}px`;

        const levelElement = document.createElement("span");
        levelElement.classList.add("tree-icon-level");
        levelElement.style.display = "none";

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–æ–±—ã—Ç–∏—è –Ω–∞–≤–µ–¥–µ–Ω–∏—è –º—ã—à–∏ –¥–ª—è –ø–æ–∫–∞–∑–∞ –Ω–æ–º–µ—Ä–∞ —É—Ä–æ–≤–Ω—è
        iconElement.addEventListener("mouseover", () => {
          let displayText = String(i); // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∏–Ω–¥–µ–∫—Å –≤ —Å—Ç—Ä–æ–∫—É

          if (displayText.length > 50) {
            // –†–∞–∑–±–∏–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –¥–≤–µ —Å—Ç—Ä–æ–∫–∏
            const midPoint = Math.floor(displayText.length / 2);
            displayText =
              displayText.slice(0, midPoint) +
              "<br>" +
              displayText.slice(midPoint);
          }

          const h3Element = document.getElementById("congratulation");
          if (h3Element) {
            h3Element.innerHTML = displayText;
          }
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è —É—Ö–æ–¥–∞ –º—ã—à–∏ –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ —Å –Ω–æ–º–µ—Ä–æ–º —É—Ä–æ–≤–Ω—è
        iconElement.addEventListener("mouseout", () => {
          levelElement.style.display = "none";
        });

        iconElement.appendChild(levelElement);
        document.getElementById("tree")?.appendChild(iconElement); // –î–æ–±–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É –Ω–∞ –µ–ª–∫—É
      }

      // –í—ã–≤–æ–¥ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–∫–æ–Ω–æ–∫ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
      const iconContainer = document.querySelector(
        ".icon-container"
      ) as HTMLElement;
      iconContainer.innerHTML = ""; // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –Ω–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π

      icons.forEach((icon) => {
        const iconItem = document.createElement("div");
        iconItem.classList.add("icon-item");
        iconItem.innerHTML = `${icon}<span>${iconCount[icon]}</span>`; // –ò–∫–æ–Ω–∫–∞ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
        iconContainer.appendChild(iconItem); // –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
      });
    }, []);

  return (
    <div>
      {isAddTestFormVisible && (
        <div className="add-container">
          <div className="form-box login">
            <form action="#">
              <h1>Add your congratulations</h1>
              <div className="input-box">
                <textarea placeholder="Enter your congratulations..." />
              </div>
              <button type="submit" className="btn btn-orange">
                Send
              </button>
              <button type="submit" className="btn btn-yellow">
                Back
              </button>
            </form>
          </div>

          <div className="toggle-box">
            <div className="toggle-panel toggle-left">
              <h1>Hello, Welcome!</h1>
              <p>Don't have an account?</p>
            </div>
          </div>
        </div>
      )}

      <div className="container">
        <div className="snow-container"></div>
        <div className="icon-container">
          <div className="icon-item">
            üéÑ<span>1</span>
          </div>
          <div className="icon-item">
            ‚ùÑÔ∏è<span>1</span>
          </div>
          <div className="icon-item">
            üéÖ<span>1</span>
          </div>
          <div className="icon-item">
            üéÅ<span>1</span>
          </div>
          <div className="icon-item">
            ‚õÑ<span>1</span>
          </div>
        </div>
        <div className="tree" id="tree">
          <div className="level-1">
            <div className="upper-shadow"></div>
          </div>
          <div className="level-2">
            <div className="details"></div>
            <div className="upper-shadow"></div>
          </div>
          <div className="level-3">
            <div className="details"></div>
            <div className="upper-shadow"></div>
          </div>
          <div className="level-4">
            <div className="details"></div>
            <div className="shadow"></div>
          </div>
          <div className="star"></div>
        </div>
        <div className="gifts">
          <div className="gift-left">
            <div className="gift-top"></div>
            <div className="gift-box"></div>
          </div>

          <div className="gift-right">
            <div className="gift-top"></div>
            <div className="gift-box"></div>
          </div>

          <div className="center-gift"></div>
          <h3 id="congratulation" className="congratulation"></h3>
        </div>
      </div>
    </div>
  );
}
